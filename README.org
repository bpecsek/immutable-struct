
* OPTIMA-IMMUTABLE-STRUCT 

Simple library that encourage the use of functional programming +
pattern matching.

It provides a wrapper for =defstruct= and a simple macro =ftype=. The symbols
are different from =cl:defstruct= and =cl:ftype= so that it avoids error in sbcl.

** macro defstruct (name-and-options &rest slots)

A variation of defstruct, with read-only slots and automatically defined constructor.

+ The constructor name has the different convention compared to the default naming convention in cl.
  It has (<name> &optional <slots...>) and has no keyword argument.
+ It adds read-only option in cl:defstruct to each slot definition.
+ It uses the noninterned symbols for the name of each slot, disallowing the use of slot-value.
+ It also defines a pattern matcher clause in exactly the same form as the constructor.

** macro ftype (name-or-names &rest types)

Abbreviation of =(declaim (ftype (function (<types...>) <type>)
<name-or-names...>))=.

+ =name-or-names= can be a function name or a list of function names. =setf= functions are treated correctly.
+ The last element of =types= is used for the return type.

In a smart implementation like sbcl, using =ftype= declaration is preferred
over =the= and =(declare (type ...))=.

** Dependencies

This library is at least tested on implementation listed below:

+ SBCL 1.2.8 on X86-64 Linux  3.13.0-45-generic (author's environment)

Also, it depends on the following libraries:

+ optima by Tomohiro Matsuyama ::
    Optimized Pattern Matching Library

+ alexandria by  ::
    Alexandria is a collection of portable public domain utilities.

+ iterate by  ::
    Jonathan Amsterdam's iterator/gatherer/accumulator facility



** Installation


** Author

+ Masataro Asai (guicho2.71828@gmail.com)

* Copyright

Copyright (c) 2015 Masataro Asai (guicho2.71828@gmail.com)


* License

Licensed under the LLGPL License.



